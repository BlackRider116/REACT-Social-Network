{"version":3,"sources":["styles/Profile.module.scss","assets/image/avatarDefault.jpg","hoc/withAuthRedirect.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteFilled.js","../node_modules/@ant-design/icons/es/icons/DeleteFilled.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileUserInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DeleteFilled","ref","AntdIcon","Object","assign","icon","DeleteFilledSvg","displayName","ProfileStatus","useState","editMode","setEditMode","status","setStatus","userId","match","params","useEffect","className","styles","profileInfoItem","status__text","onClick","undefined","style","cursor","placeholder","onChange","ev","currentTarget","value","onBlur","setTimeout","autoFocus","updateUserStatus","ReduxProfileInfoForm","reduxForm","form","profile","error","onSubmit","handleSubmit","type","saveProfileBtn","display","errorText","stylesProfile","inputStyle_Name","fieldValue","required","fullName","inputStyle","keys","contacts","map","contact","key","alignItems","ReduxProfileInfoFormAboutMe","aboutMe","ProfileUserInfo","marginLeft","ProfileAboutMe","width","alignItem","lookingForAJob","color","lookingForAJobDescription","ProfileInfo","profileUpdate","fileUpload","createRef","editModeName","setEditModeName","editModeAboutMe","setEditModeAboutMe","formData","saveProfile","profileInfoCard","profileInfo","src","photos","large","avatarDefault","alt","e","target","files","length","savePhoto","isOwner","marginTop","isFollow","Button","variant","onFollowThunk","startDialogThunk","paddingTop","current","click","Dropdown","Toggle","Menu","Item","margin","initialValues","Posts","posts","Card","classes","profilePost","profilePostItem","avaPhoto","postText","profilePostLikes","likes","likeDislikeMyPost","id","float","deleteMyPost","MyPostFormRedux","myPosts","Field","name","component","compose","profilePage","small","addNewPost","actionsProfile","withRouter","post","MyPosts","myProfile","localStorage","setItem","JSON","stringify","dispatch","newPost","reset","marginBottom","deleteLocalStorage","removeItem","Profile","global","profileUpdateSuccess","Preloader","ProfileContainer","authUserId","history","push","getProfileThunk","getUserStatus","userProfileId","prevState"],"mappings":"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","file":"static/js/4.48005e47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"Profile_global__2dASZ\",\"profileInfoCard\":\"Profile_profileInfoCard__24Dx_\",\"profileInfo\":\"Profile_profileInfo__77Yjz\",\"status__text\":\"Profile_status__text__CN9Hc\",\"profilePost\":\"Profile_profilePost__2pgMq\",\"profilePostItem\":\"Profile_profilePostItem__3fX0W\",\"profilePostLikes\":\"Profile_profilePostLikes__XhHl3\",\"deleteLocalStorage\":\"Profile_deleteLocalStorage__311b3\",\"myPosts\":\"Profile_myPosts__M2MUQ\",\"inputStyle_Name\":\"Profile_inputStyle_Name__2jh8i\",\"inputStyle\":\"Profile_inputStyle__3Q7s7\",\"aboutMe\":\"Profile_aboutMe__1D6E8\"};","module.exports = __webpack_public_path__ + \"static/media/avatarDefault.6c93098b.jpg\";","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// This icon file is generated automatically.\n// tslint:disable\nvar DeleteFilled = { \"name\": \"delete\", \"theme\": \"filled\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z\" } }] } };\nexport default DeleteFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteFilledSvg from \"@ant-design/icons-svg/es/asn/DeleteFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteFilled = function DeleteFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteFilledSvg\n  }));\n};\n\nDeleteFilled.displayName = 'DeleteFilled';\nexport default React.forwardRef(DeleteFilled);","import React, { useState, useEffect } from \"react\";\nimport styles from \"../../../styles/Profile.module.scss\";\n\nconst ProfileStatus = props => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  const userId = props.match.params.userId;\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activatedEditMode = () => {\n    if (userId === undefined) {\n      setEditMode(true);\n    }\n  };\n  const deactivatedEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = ev => {\n    setStatus(ev.currentTarget.value);\n  };\n\n  return (\n    <div className={styles.profileInfoItem}>\n      {!editMode && (\n        <div className={styles.status__text}\n          onClick={activatedEditMode}\n        >\n          {props.status}\n        </div>\n      )}\n      {editMode && (\n        <div style={{ cursor: \"pointer\" }}>\n          <input\n            placeholder=\"Введите Ваш статус\"\n            onChange={onStatusChange}\n            onBlur={() => {\n              setTimeout(() => {\n                setEditMode(false);\n              }, 500);\n            }}\n            autoFocus={true}\n            value={status}\n          />\n          <button onClick={deactivatedEditMode}>OK</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport styles from \"../../../common/FormControl/FormControl.module.css\";\nimport { reduxForm } from \"redux-form\";\nimport { fieldValue } from \"../../../common/FormControl/FormControl\";\nimport { required } from \"../../../utilities/validation/validation\";\nimport stylesProfile from \"../../../styles/Profile.module.scss\";\n\nconst ProfileInfoForm = ({ profile, error, ...props }) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button\n        type=\"submit\"\n        ref={props.saveProfileBtn}\n        style={{ display: \"none\" }}\n      >\n        Сохранить\n      </button>\n      <div>{error && <div className={styles.errorText}>{error}</div>}</div>\n\n      <div>\n        <div className={stylesProfile.inputStyle_Name}>\n          <b>Полное имя: </b>\n          <div>\n            {fieldValue(\n              required,\n              \"fullName\",\n              \"input\",\n              null,\n              null,\n              profile.fullName\n            )}\n          </div>\n        </div>\n        <div className={stylesProfile.inputStyle}>\n          <b>Контакты: </b>\n          <div>\n            {Object.keys(profile.contacts).map(contact => {\n              return (\n                <span\n                  key={contact}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <b>{contact}: </b>\n                  {fieldValue(\n                    [],\n                    \"contacts.\" + contact,\n                    \"input\",\n                    contact,\n                    null\n                  )}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxProfileInfoForm = reduxForm({ form: \"profileUserInfo\" })(\n  ProfileInfoForm\n);\n\nexport const ProfileInfoFormAboutMe = ({ profile, error, ...props }) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button\n        type=\"submit\"\n        ref={props.saveProfileBtn}\n        style={{ display: \"none\" }}\n      >\n        Сохранить\n      </button>\n      <span>{error && <span className={styles.errorText}>{error}</span>}</span>\n      <div className={stylesProfile.aboutMe}>\n        <div>\n          <b>Обо мне: </b>\n          {fieldValue(required, \"aboutMe\", null)}\n        </div>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <b>В поиске работы: </b>{\" \"}\n          {fieldValue([], \"lookingForAJob\", \"input\", null, \"checkbox\")}\n        </div>\n\n        <div>\n          <b>Мой скилл: </b>\n          {fieldValue(required, \"lookingForAJobDescription\", null, null, null)}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxProfileInfoFormAboutMe = reduxForm({\n  form: \"profileUserInfoAboutMe\"\n})(ProfileInfoFormAboutMe);\n\nexport const ProfileUserInfo = ({ profile }) => {\n  return (\n    <div>\n      <b>Контакты: </b>\n      {Object.keys(profile.contacts).map(contact => {\n        return (\n          <div key={contact} style={{ marginLeft: \"15px\" }}>\n            {profile.contacts[contact] !== null &&\n              profile.contacts[contact] !== \"\" && (\n                <div>\n                  <b>{contact}: </b>\n                  {profile.contacts[contact]}\n                </div>\n              )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const ProfileAboutMe = ({ profile }) => {\n  return (\n    <div>\n      <div>\n        <b>Обо мне: </b>\n        <div style={{ marginLeft: \"10px\", width: \"60%\" }}>\n          {profile.aboutMe}\n        </div>\n      </div>\n\n      <div style={{ display: \"flex\", alignItem: \"center\" }}>\n        <b>В поиске работы: </b>\n        <h5 style={{ marginLeft: \"10px\" }}>\n          {profile.lookingForAJob ? (\n            <span style={{ color: \"green\" }}>Yes</span>\n          ) : (\n            <span style={{ color: \"red\" }}>No</span>\n          )}\n        </h5>\n      </div>\n\n      <div>\n        <b>Мои скиллы: </b>\n        <div style={{ marginLeft: \"10px\", width: \"60%\" }}>\n          {profile.lookingForAJobDescription}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport avatarDefault from \"../../../assets/image/avatarDefault.jpg\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport styles from \"../../../styles/Profile.module.scss\";\nimport {\n  ReduxProfileInfoForm,\n  ProfileUserInfo,\n  ProfileAboutMe,\n  ReduxProfileInfoFormAboutMe\n} from \"./ProfileUserInfo\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ProfileInfo = ({ profileUpdate, ...props }) => {\n  const fileUpload = React.createRef();\n  const photoSelected = e => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n\n  const [editModeName, setEditModeName] = useState(false);\n  const [editModeAboutMe, setEditModeAboutMe] = useState(false);\n\n  const onSubmit = formData => {\n    if (formData !== props.profile) {\n      props.saveProfile(formData);\n    } else if (profileUpdate !== false) {\n      setEditModeName(false);\n      setEditModeAboutMe(false);\n    }\n  };\n\n  useEffect(() => {\n    if (profileUpdate === true) {\n      setEditModeName(false);\n      setEditModeAboutMe(false);\n    }\n  }, [profileUpdate]);\n\n  const saveProfileBtn = React.createRef();\n\n  return (\n    <>\n      <div className={styles.profileInfoCard}>\n        <div className={styles.profileInfo}>\n          <img\n            src={\n              props.profile.photos.large !== null\n                ? props.profile.photos.large\n                : avatarDefault\n            }\n            alt=\"AvaPhoto\"\n          />\n          <input\n            ref={fileUpload}\n            type={\"file\"}\n            onChange={photoSelected}\n            style={{ display: \"none\" }}\n          />\n          {!props.isOwner ? (\n            <div style={{ paddingTop: \"3px\" }}>\n              <Button\n                style={{ width: \"250px\" }}\n                onClick={() => fileUpload.current.click()}\n                variant=\"secondary\"\n              >\n                Изменить фото\n              </Button>\n              {!props.isOwner && !editModeName && !editModeAboutMe ? (\n                <Dropdown>\n                  <Dropdown.Toggle style={{ marginTop: \"3px\", width: \"250px\" }}>\n                    Редактировать профиль\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu style={{ width: \"250px\" }}>\n                    <Dropdown.Item onClick={() => setEditModeName(true)}>\n                      Имя и контакты\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => setEditModeAboutMe(true)}>\n                      Обо мне\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              ) : (\n                <Button\n                  style={{ marginTop: \"3px\", width: \"250px\" }}\n                  variant=\"success\"\n                  onClick={() => saveProfileBtn.current.click()}\n                >\n                  Сохранить\n                </Button>\n              )}\n            </div>\n          ) : (\n            <div style={{ marginTop: \"5px\" }}>\n              <div>\n                {!props.isFollow ? (\n                  <Button\n                    style={{ width: \"250px\" }}\n                    variant=\"success\"\n                    onClick={() =>\n                      props.onFollowThunk(props.profile.userId, props.isFollow)\n                    }\n                  >\n                    Подписаться\n                  </Button>\n                ) : (\n                  <Button\n                    style={{ width: \"250px\" }}\n                    variant=\"danger\"\n                    onClick={() =>\n                      props.onFollowThunk(props.profile.userId, props.isFollow)\n                    }\n                  >\n                    Отписаться\n                  </Button>\n                )}\n              </div>\n              <div style={{ marginTop: \"3px\" }}>\n                <NavLink to={`/dialogs/${props.profile.userId}`}>\n                  <Button\n                    style={{ width: \"250px\" }}\n                    onClick={() => props.startDialogThunk(props.profile.userId)}\n                  >\n                    Написать сообщение\n                  </Button>\n                </NavLink>\n              </div>\n            </div>\n          )}\n        </div>\n        <div style={{ margin: \"10px\" }}>\n          <h3>{props.profile.fullName}</h3>\n          <ProfileStatus {...props} />\n          <div style={{ marginLeft: \"10px\" }}>\n            {!editModeName ? (\n              <ProfileUserInfo profile={props.profile} />\n            ) : (\n              <ReduxProfileInfoForm\n                {...props}\n                onSubmit={onSubmit}\n                initialValues={props.profile}\n                saveProfileBtn={saveProfileBtn}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      <div style={{ marginLeft: \"10px\" }}>\n        {!editModeAboutMe ? (\n          <ProfileAboutMe profile={props.profile} />\n        ) : (\n          <ReduxProfileInfoFormAboutMe\n            {...props}\n            onSubmit={onSubmit}\n            initialValues={props.profile}\n            saveProfileBtn={saveProfileBtn}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport classes from \"../../../styles/Profile.module.scss\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { DeleteFilled } from \"@ant-design/icons\";\n\nconst Posts = ({posts, ...props}) => {\n  return (\n    <Card className={classes.profilePost}>\n      <div className={classes.profilePostItem}>\n        <img alt=\"Post\" src={props.avaPhoto} />\n        <span>{posts.postText}</span>\n      </div>\n      <div className={classes.profilePostLikes}>\n        <span>{`💗 ${posts.likes}  `}</span>\n        <Button\n          variant=\"success\"\n          onClick={() => props.likeDislikeMyPost(posts.id, true)}\n        >\n          <span>{\"👍\"}</span>\n        </Button>\n        <Button\n          variant=\"danger\"\n          onClick={() => props.likeDislikeMyPost(posts.id, false)}\n        >\n          <span>{\"👎\"}</span>\n        </Button>\n        <Button\n          variant=\"dark\"\n          style={{ float: \"right\" }}\n          onClick={() => props.deleteMyPost(posts.id)}\n        >\n          <DeleteFilled style={{ color: \"red\" }} />\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport classes from \"../../../styles/Profile.module.scss\";\nimport MyPosts from \"./MyPosts\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { reset } from \"redux-form\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  actionsProfile,\n  likeDislikeMyPost\n} from \"../../../redux/reducers/reduceProfile\";\nimport { compose } from \"redux\";\n\nconst MyPostsContainer = props => {\n  const myPosts = props.posts.map(post => (\n    <MyPosts\n      avaPhoto={props.avaPhoto}\n      posts={post}\n      key={post.id}\n      likeDislikeMyPost={props.likeDislikeMyPost}\n      deleteMyPost={props.deleteMyPost}\n    />\n  ));\n  const myProfile = props.match.params.userId;\n\n  const onSubmit = (postText, dispatch) => {\n    props.addNewPost(postText.newPost, props.avaPhoto);\n    dispatch(reset(\"myNewPost\"));\n  };\n \n  localStorage.setItem('MyPosts', JSON.stringify(props.posts))\n  return (\n    <>\n      {!myProfile && (\n        <div>\n          <MyPostFormRedux onSubmit={onSubmit} />\n          <div style={{ marginBottom: \"10px\" }}>{myPosts}</div>\n          <div className={classes.deleteLocalStorage}>\n            <Button\n              variant=\"danger\"\n              onClick={() => localStorage.removeItem(\"MyPosts\")}\n            >\n              Очиcтить localStorage\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst MyPostForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.myPosts}>\n        <Field name=\"newPost\" component=\"textarea\" />\n        <Button type=\"submit\">Добавить</Button>\n      </div>\n    </form>\n  );\n};\n\nconst MyPostFormRedux = reduxForm({ form: \"myNewPost\" })(MyPostForm);\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    avaPhoto: state.profilePage.profile.photos.small\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    addNewPost: actionsProfile.addNewPost,\n    likeDislikeMyPost,\n    deleteMyPost: actionsProfile.deleteMyPost\n  }),\n  withRouter\n)(MyPostsContainer);\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport { Card } from \"react-bootstrap\";\nimport styles from '../../styles/Profile.module.scss'\n\nconst Profile = props => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <Card className={styles.global} >\n      <ProfileInfo\n        {...props}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus}\n        profileUpdateSuccess={props.profileUpdateSuccess}\n        startDialogThunk={props.startDialogThunk}\n        isFollow={props.isFollow}\n        onFollowThunk={props.onFollowThunk}\n      />\n      <MyPostsContainer />\n    </Card>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getProfileThunk,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  actionsProfile,\r\n  onFollowThunk,\r\n} from \"../../redux/reducers/reduceProfile\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { startDialogThunk } from \"../../redux/reducers/reduceDialogs\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  userProfileId() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId && this.props.isAuth) {\r\n      userId = this.props.authUserId;\r\n    }\r\n    if (!userId && !this.props.isAuth) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    this.props.getProfileThunk(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.userProfileId();\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.props.match.params.userId !== prevState.match.params.userId) {\r\n      this.userProfileId();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n        profileUpdateSuccess={this.props.profileUpdateSuccess}\r\n        startDialogThunk={this.props.startDialogThunk}\r\n        isFollow={this.props.isFollow}\r\n        onFollowThunk={this.props.onFollowThunk}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    profileUpdate: state.profilePage.profileUpdate,\r\n    isFollow: state.profilePage.isFollow,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    profileUpdateSuccess: actionsProfile.profileUpdateSuccess,\r\n    startDialogThunk,\r\n    onFollowThunk\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}