{"version":3,"sources":["styles/Profile.module.scss","assets/image/avatarDefault.jpg","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileUserInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileStatus","useState","editMode","setEditMode","status","setStatus","userId","match","params","useEffect","className","styles","profileInfoItem","status__text","onClick","undefined","style","cursor","placeholder","onChange","ev","currentTarget","value","onBlur","setTimeout","autoFocus","updateUserStatus","ReduxProfileInfoForm","reduxForm","form","profile","error","onSubmit","handleSubmit","type","ref","saveProfileBtn","display","errorText","stylesProfile","inputStyle_Name","fieldValue","required","fullName","inputStyle","Object","keys","contacts","map","contact","key","alignItems","ReduxProfileInfoFormAboutMe","aboutMe","ProfileUserInfo","marginLeft","ProfileAboutMe","width","alignItem","lookingForAJob","lookingForAJobDescription","ProfileInfo","profileUpdate","fileUpload","createRef","editModeName","setEditModeName","editModeAboutMe","setEditModeAboutMe","formData","saveProfile","profileInfoCard","profileInfo","src","photos","large","avatarDefault","alt","e","target","files","length","savePhoto","isOwner","marginTop","isFollow","Button","variant","onFollowThunk","startDialogThunk","paddingTop","current","click","Dropdown","Toggle","Menu","Item","margin","initialValues","Post","classes","profilePostItem","avaPhoto","posts","postText","profilePostLikes","likes","MyPostFormRedux","myPostsInput","Field","name","component","withRouter","post","id","myProfile","dispatch","addNewPost","newPost","reset","myPostsContent","MyPostsContainer","profilePage","small","MyPosts","Profile","Card","global","profileUpdateSuccess","Preloader","ProfileContainer","authUserId","history","push","getProfileThunk","getUserStatus","userProfileId","prevState","compose"],"mappings":"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","file":"static/js/5.de3f98c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"Profile_global__2dASZ\",\"profileInfoCard\":\"Profile_profileInfoCard__24Dx_\",\"profileInfo\":\"Profile_profileInfo__77Yjz\",\"status__text\":\"Profile_status__text__CN9Hc\",\"aboutMe\":\"Profile_aboutMe__1D6E8\",\"profilePostItem\":\"Profile_profilePostItem__3fX0W\",\"profilePostLikes\":\"Profile_profilePostLikes__XhHl3\",\"myPostsContent\":\"Profile_myPostsContent__2bkM_\",\"myPostsInput\":\"Profile_myPostsInput__3lxoZ\",\"inputStyle_Name\":\"Profile_inputStyle_Name__2jh8i\",\"inputStyle\":\"Profile_inputStyle__3Q7s7\"};","module.exports = __webpack_public_path__ + \"static/media/avatarDefault.6c93098b.jpg\";","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React, { useState, useEffect } from \"react\";\nimport styles from \"../../../styles/Profile.module.scss\";\n\nconst ProfileStatus = props => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  const userId = props.match.params.userId;\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activatedEditMode = () => {\n    if (userId === undefined) {\n      setEditMode(true);\n    }\n  };\n  const deactivatedEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = ev => {\n    setStatus(ev.currentTarget.value);\n  };\n\n  return (\n    <div className={styles.profileInfoItem}>\n      {!editMode && (\n        <div className={styles.status__text}\n          onClick={activatedEditMode}\n        >\n          {props.status}\n        </div>\n      )}\n      {editMode && (\n        <div style={{ cursor: \"pointer\" }}>\n          <input\n            placeholder=\"Введите Ваш статус\"\n            onChange={onStatusChange}\n            onBlur={() => {\n              setTimeout(() => {\n                setEditMode(false);\n              }, 500);\n            }}\n            autoFocus={true}\n            value={status}\n          />\n          <button onClick={deactivatedEditMode}>OK</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport styles from \"../../../common/FormControl/FormControl.module.css\";\nimport { reduxForm } from \"redux-form\";\nimport { fieldValue } from \"../../../common/FormControl/FormControl\";\nimport { required } from \"../../../utilities/validation/validation\";\nimport stylesProfile from \"../../../styles/Profile.module.scss\";\n\nconst ProfileInfoForm = ({ profile, error, ...props }) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button\n        type=\"submit\"\n        ref={props.saveProfileBtn}\n        style={{ display: \"none\" }}\n      >\n        Сохранить\n      </button>\n      <div>{error && <div className={styles.errorText}>{error}</div>}</div>\n\n      <div>\n        <div className={stylesProfile.inputStyle_Name}>\n          <b>Полное имя: </b>\n          <div>\n            {fieldValue(\n              required,\n              \"fullName\",\n              \"input\",\n              null,\n              null,\n              profile.fullName\n            )}\n          </div>\n        </div>\n        <div className={stylesProfile.inputStyle}>\n          <b>Контакты: </b>\n          <div>\n            {Object.keys(profile.contacts).map(contact => {\n              return (\n                <span\n                  key={contact}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <b>{contact}: </b>\n                  {fieldValue(\n                    [],\n                    \"contacts.\" + contact,\n                    \"input\",\n                    contact,\n                    null\n                  )}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxProfileInfoForm = reduxForm({ form: \"profileUserInfo\" })(\n  ProfileInfoForm\n);\n\nexport const ProfileInfoFormAboutMe = ({ profile, error, ...props }) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button\n        type=\"submit\"\n        ref={props.saveProfileBtn}\n        style={{ display: \"none\" }}\n      >\n        Сохранить\n      </button>\n      <span>{error && <span className={styles.errorText}>{error}</span>}</span>\n      <div className={stylesProfile.aboutMe}>\n        <div>\n          <b>Обо мне: </b>\n          {fieldValue(required, \"aboutMe\", null)}\n        </div>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <b>В поиске работы: </b>{\" \"}\n          {fieldValue([], \"lookingForAJob\", \"input\", null, \"checkbox\")}\n        </div>\n\n        <div>\n          <b>Мой скилл: </b>\n          {fieldValue(required, \"lookingForAJobDescription\", null, null, null)}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxProfileInfoFormAboutMe = reduxForm({\n  form: \"profileUserInfoAboutMe\"\n})(ProfileInfoFormAboutMe);\n\nexport const ProfileUserInfo = ({ profile }) => {\n  return (\n    <div>\n      <b>Контакты: </b>\n      {Object.keys(profile.contacts).map(contact => {\n        return (\n          <div key={contact} style={{ marginLeft: \"15px\" }}>\n            {profile.contacts[contact] !== null &&\n              profile.contacts[contact] !== \"\" && (\n                <div>\n                  <b>{contact}: </b>\n                  {profile.contacts[contact]}\n                </div>\n              )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const ProfileAboutMe = ({ profile }) => {\n  return (\n    <div>\n      <div>\n        <b>Обо мне: </b>\n        <div style={{marginLeft: '10px', width: '60%'}}>{profile.aboutMe}</div>\n      </div>\n\n      <div style={{display: 'flex', alignItem: 'center'}}>\n        <b>В поиске работы: </b>\n        <h5 style={{marginLeft: '10px'}}>{profile.lookingForAJob ? \"Yes\" : \"No\"}</h5>\n      </div>\n\n      <div>\n        <b>Мои скиллы: </b>\n        <div style={{marginLeft: '10px', width: '60%'}}>{profile.lookingForAJobDescription}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport avatarDefault from \"../../../assets/image/avatarDefault.jpg\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport styles from \"../../../styles/Profile.module.scss\";\nimport {\n  ReduxProfileInfoForm,\n  ProfileUserInfo,\n  ProfileAboutMe,\n  ReduxProfileInfoFormAboutMe\n} from \"./ProfileUserInfo\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ProfileInfo = ({ profileUpdate, ...props }) => {\n  const fileUpload = React.createRef();\n  const photoSelected = e => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n\n  const [editModeName, setEditModeName] = useState(false);\n  const [editModeAboutMe, setEditModeAboutMe] = useState(false);\n\n  const onSubmit = formData => {\n    if (formData !== props.profile) {\n      props.saveProfile(formData);\n    } else if (profileUpdate !== false) {\n      setEditModeName(false);\n      setEditModeAboutMe(false);\n    }\n  };\n\n  useEffect(() => {\n    if (profileUpdate === true) {\n      setEditModeName(false);\n      setEditModeAboutMe(false);\n    }\n  }, [profileUpdate]);\n\n  const saveProfileBtn = React.createRef();\n\n  return (\n    <>\n      <div className={styles.profileInfoCard}>\n        <div className={styles.profileInfo}>\n          <img\n            src={\n              props.profile.photos.large !== null\n                ? props.profile.photos.large\n                : avatarDefault\n            }\n            alt=\"AvaPhoto\"\n          />\n          <textarea\n            ref={fileUpload}\n            type={\"file\"}\n            onChange={photoSelected}\n            style={{ display: \"none\" }}\n          />\n          {!props.isOwner ? (\n            <div style={{ paddingTop: \"3px\" }}>\n              <Button\n                style={{ width: \"250px\" }}\n                onClick={() => fileUpload.current.click()}\n                variant=\"secondary\"\n              >\n                Изменить фото\n              </Button>\n              {!props.isOwner && !editModeName && !editModeAboutMe ? (\n                <Dropdown>\n                  <Dropdown.Toggle style={{ marginTop: \"3px\", width: \"250px\" }}>\n                    Редактировать профиль\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu style={{ width: \"250px\" }}>\n                    <Dropdown.Item onClick={() => setEditModeName(true)}>\n                      Имя и контакты\n                    </Dropdown.Item>\n                    <Dropdown.Item onClick={() => setEditModeAboutMe(true)}>\n                      Обо мне\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              ) : (\n                <Button\n                  style={{ marginTop: \"3px\", width: \"250px\" }}\n                  variant=\"success\"\n                  onClick={() => saveProfileBtn.current.click()}\n                >\n                  Сохранить\n                </Button>\n              )}\n            </div>\n          ) : (\n            <div style={{ marginTop: \"5px\" }}>\n              <div>\n                {!props.isFollow ? (\n                  <Button\n                    style={{ width: \"250px\" }}\n                    variant=\"success\"\n                    onClick={() =>\n                      props.onFollowThunk(props.profile.userId, props.isFollow)\n                    }\n                  >\n                    Подписаться\n                  </Button>\n                ) : (\n                  <Button\n                    style={{ width: \"250px\" }}\n                    variant=\"danger\"\n                    onClick={() =>\n                      props.onFollowThunk(props.profile.userId, props.isFollow)\n                    }\n                  >\n                    Отписаться\n                  </Button>\n                )}\n              </div>\n              <div style={{ marginTop: \"3px\" }}>\n                <NavLink to={`/dialogs/${props.profile.userId}`}>\n                  <Button\n                    style={{ width: \"250px\" }}\n                    onClick={() => props.startDialogThunk(props.profile.userId)}\n                  >\n                    Написать сообщение\n                  </Button>\n                </NavLink>\n              </div>\n            </div>\n          )}\n        </div>\n        <div style={{ margin: \"10px\" }}>\n          <h3>{props.profile.fullName}</h3>\n          <ProfileStatus {...props} />\n          <div style={{ marginLeft: \"10px\" }}>\n            {!editModeName ? (\n              <ProfileUserInfo profile={props.profile} />\n            ) : (\n              <ReduxProfileInfoForm\n                {...props}\n                onSubmit={onSubmit}\n                initialValues={props.profile}\n                saveProfileBtn={saveProfileBtn}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n      <div style={{ marginLeft: \"10px\" }}>\n        {!editModeAboutMe ? (\n          <ProfileAboutMe profile={props.profile} />\n        ) : (\n          <ReduxProfileInfoFormAboutMe\n            {...props}\n            onSubmit={onSubmit}\n            initialValues={props.profile}\n            saveProfileBtn={saveProfileBtn}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport classes from \"../../../../styles/Profile.module.scss\";\n\nconst Post = props => {\n  return (\n    <div className={classes.profilePostItem}>\n      <img alt='Post' src={props.avaPhoto} />\n      {props.posts.postText}\n      <div className={classes.profilePostLikes}>\n        {props.posts.likes}\n        <button>Likes</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport classes from \"../../../styles/Profile.module.scss\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { withRouter } from \"react-router-dom\";\nimport { reset } from \"redux-form\";\n\nconst MyPosts = (props) => {\n  const posts = props.posts.map(post => <Post avaPhoto={props.avaPhoto} posts={post} key={post.id} />);\n  const myProfile = props.match.params.userId;\n\n  const onSubmit = (postText, dispatch) => {\n    props.addNewPost(postText.newPost, props.avaPhoto);\n    dispatch(reset(\"myNewPost\"));\n  };\n\n  return (\n    <>\n      {!myProfile && (\n        <div>\n          <MyPostFormRedux onSubmit={onSubmit} />\n          <div className={classes.myPostsContent}>{posts}</div>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst MyPostForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.myPostsInput}>\n        <Field name=\"newPost\" component=\"textarea\" />\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nconst MyPostFormRedux = reduxForm({ form: \"myNewPost\" })(MyPostForm);\n\nexport default withRouter(MyPosts);\n","import { addNewPost } from \"../../../redux/reducers/reduceProfile\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    avaPhoto: state.profilePage.profile.photos.small\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addNewPost })(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport { Card } from \"react-bootstrap\";\nimport styles from '../../styles/Profile.module.scss'\n\nconst Profile = props => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <Card className={styles.global} >\n      <ProfileInfo\n        {...props}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus}\n        profileUpdateSuccess={props.profileUpdateSuccess}\n        startDialogThunk={props.startDialogThunk}\n        isFollow={props.isFollow}\n        onFollowThunk={props.onFollowThunk}\n      />\n      <MyPostsContainer />\n    </Card>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getProfileThunk,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  profileUpdateSuccess,\r\n  onFollowThunk\r\n} from \"../../redux/reducers/reduceProfile\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { startDialogThunk } from \"../../redux/reducers/reduceDialogs\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  userProfileId() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId && this.props.isAuth) {\r\n      userId = this.props.authUserId;\r\n    }\r\n    if (!userId && !this.props.isAuth) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    this.props.getProfileThunk(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.userProfileId();\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.props.match.params.userId !== prevState.match.params.userId) {\r\n      this.userProfileId();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n        profileUpdateSuccess={this.props.profileUpdateSuccess}\r\n        startDialogThunk={this.props.startDialogThunk}\r\n        isFollow={this.props.isFollow}\r\n        onFollowThunk={this.props.onFollowThunk}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    profileUpdate: state.profilePage.profileUpdate,\r\n    isFollow: state.profilePage.isFollow,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    profileUpdateSuccess,\r\n    startDialogThunk,\r\n    onFollowThunk\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}