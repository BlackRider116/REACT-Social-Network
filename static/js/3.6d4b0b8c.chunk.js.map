{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.js","assets/image/avatarDefault.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileUserInfo.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","useState","editMode","setEditMode","status","setStatus","userId","match","params","useEffect","className","classes","item","onDoubleClick","onChange","ev","currentTarget","onBlur","setTimeout","autoFocus","onClick","updateUserStatus","ReduxProfileUserInfo","reduxForm","form","profile","onSubmit","handleSubmit","isOwner","fieldValue","requiredProfile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","keys","contacts","map","contact","key","ProfileInfo","stateProfile","setStateProfile","avatar","src","photos","small","large","avatarDefault","alt","type","e","target","files","savePhoto","ProfileUserInfo","saveProfile","formData","initialValues","Post","posts","postText","likes","MyPostFormRedux","input","Field","name","component","MyPosts","post","id","addNewPost","content","MyPostsContainer","profilePage","Profile","dispatch","Preloader","ProfileContainer","authUserId","history","getProfileThunk","getUserStatus","userProfileId","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.6d4b0b8c.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","module.exports = __webpack_public_path__ + \"static/media/avatarDefault.6c93098b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProfileInfo_item__1CW9q\",\"avatar\":\"ProfileInfo_avatar__2wFzg\",\"contact\":\"ProfileInfo_contact__i54Ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2_Mn2\",\"input\":\"MyPosts_input__1z1XX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__20EEl\",\"likes\":\"Post_likes__1zLXg\"};","import React, { useState, useEffect } from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\n\nconst ProfileStatus = props => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  const userId = props.match.params.userId;\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activatedEditMode = () => {\n    if (userId === undefined) {\n      setEditMode(true);\n    }\n  };\n  const deactivatedEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = ev => {\n    setStatus(ev.currentTarget.value);\n  };\n\n  return (\n    <div className={classes.item}>\n      {!editMode && (\n        <div>\n          <b>Status: </b>\n          <span onDoubleClick={activatedEditMode}>\n            {props.status || \"<<<Not indicated>>>\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            onBlur={() => {\n              setTimeout(() => {\n                setEditMode(false);\n              }, 500);\n            }}\n            autoFocus={true}\n            value={status}\n          />\n          <button onClick={deactivatedEditMode}>OK</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import React, { useState } from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport { reduxForm } from \"redux-form\";\nimport {fieldValue } from \"../../../common/FormControl/FormControl\";\nimport {requiredProfile } from \"../../../utilities/validation/validation\";\n\nconst ProfileUserInfoForm = ({ profile, ...props }) => {\n\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      {!props.isOwner && (!editMode ? <button onClick={()=>{setEditMode(true)}}>Edit</button> \n                                    : <button onClick={()=>{setEditMode(false)}}>Save</button>)}\n      <div>\n        <b>Full Name: </b>\n        {!editMode ? profile.fullName : fieldValue(requiredProfile, \"fullName\", \"input\",null,null,profile.fullName)}\n      </div>\n      <div>\n        <b>About me: </b>\n        {!editMode ? profile.aboutMe : fieldValue(requiredProfile, \"aboutMe\",null)}\n      </div>\n      <div>\n        <b>Looking for a job: </b>\n        {!editMode ? (profile.lookingForAJob ? \"Yes\" : \"No\") : fieldValue(requiredProfile, \"lookingForAJob\", \"input\",null,\"checkbox\")}\n      </div>\n      <div>\n        <b>Looking for a job description: </b>\n        {!editMode ? profile.lookingForAJobDescription : fieldValue(requiredProfile, \"lookingForAJobDescription\",null,null,null)}\n      </div>\n      <div>\n        <b>Contacts: </b>\n        {Object.keys(profile.contacts).map(contact => {\n          return (\n            <div key={contact} className={classes.contact}>\n              <b>{contact}: </b>\n              {!editMode ? profile.contacts[contact] : fieldValue(requiredProfile, 'contacts.'+contact, \"input\", null, null)}\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ReduxProfileUserInfo = reduxForm({ form: \"profileUserInfo\" })(ProfileUserInfoForm);\n\nexport default ReduxProfileUserInfo;\n","import React, { useState } from \"react\";\nimport avatarDefault from \"../../../assets/image/avatarDefault.jpg\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport classes from \"./ProfileInfo.module.css\";\nimport ProfileUserInfo from \"./ProfileUserInfo\";\n\nconst ProfileInfo = props => {\n  const photoSelected = e => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n\n  const[stateProfile, setStateProfile] = useState(props.profile)\n\n  const onSubmit = formData => {\n    if (formData !== stateProfile) {\n      setStateProfile(formData)\n      props.saveProfile(formData);\n    }\n  };\n\n  return (\n    <div>\n      <div className={classes.item}>\n        <img\n          className={classes.avatar}\n          src={\n            props.profile.photos.small !== null\n              ? props.profile.photos.large\n              : avatarDefault\n          }\n          alt=\"AvaPhoto\"\n        />\n        {!props.isOwner && <input type={\"file\"} onChange={photoSelected} />}\n      </div>\n      <ProfileStatus\n        {...props}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus}\n      />\n      <ProfileUserInfo\n        {...props}\n        saveProfile={props.saveProfile}\n        onSubmit={onSubmit}\n        initialValues={props.profile}\n      />\n    </div>\n  );\n};\nexport default ProfileInfo;\n","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\nconst Post = props => {\n  return (\n    <div className={classes.item}>\n      <img alt='Post' src={props.posts.src} />\n      {props.posts.postText}\n      <div className={classes.likes}>\n        {props.posts.likes}\n        <button>Likes</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst MyPosts = props => {\n  const posts = props.posts.map(post => <Post posts={post} key={post.id} />);\n\n  const onSubmit = postText => {\n    props.addNewPost(postText);\n  };\n\n  return (\n    <div>\n      <MyPostFormRedux onSubmit={onSubmit} />\n      <div className={classes.content}>{posts}</div>\n    </div>\n  );\n};\n\nconst MyPostForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.input}>\n        <Field name=\"newPost\" component=\"textarea\" />\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nconst MyPostFormRedux = reduxForm({ form: \"myNewPost\" })(MyPostForm);\n\nexport default MyPosts;\n","import { addNewPost } from \"../../../redux/reduceProfile\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addNewPost })(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport classes from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../../common/Preloader/Preloader\";\n\n\nconst Profile = props => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n  return (\n    <div className={classes.content}>\n      <ProfileInfo {...props} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile} status={props.status} updateUserStatus={props.updateUserStatus}/>\n      <MyPostsContainer state={props.state} dispatch={props.dispatch}/>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getProfileThunk,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile\r\n} from \"../../redux/reduceProfile\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  userProfileId() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId && this.props.isAuth) {\r\n      userId = this.props.authUserId;\r\n    }\r\n    if (!userId && !this.props.isAuth) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    this.props.getProfileThunk(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.userProfileId();\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.props.match.params.userId !== prevState.match.params.userId) {\r\n      this.userProfileId();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}