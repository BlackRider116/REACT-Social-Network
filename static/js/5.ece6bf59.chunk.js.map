{"version":3,"sources":["styles/Dialogs.module.css","hoc/withAuthRedirect.js","components/Navbar/Dialogs/UsersDialog/UsersDialog.jsx","components/Navbar/Dialogs/Messages/Messages.jsx","components/Navbar/Dialogs/Dialogs.jsx","components/Navbar/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","UsersDialog","className","classes","user","dialogItem","id","activeClassName","active","alt","src","name","MessagesItems","message","NewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","input","Field","component","Dialogs","messagesItems","map","Messages","key","dialogs","dialog","messages","messageText","dispatch","addNewMessage","reset","compose","messagesPage","usersDialog"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,yB,+ICGvQC,EAA6B,SAAAC,GAAK,MAAK,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAAAC,GAAc,IACpCC,EADmC,iLAGjC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHX,GACTC,IAAML,WAOtC,OADuCM,YAAQX,EAARW,CAAoCL,K,sFCEhEM,EAZK,SAAAJ,GAElB,OACE,yBAAKK,UAAS,UAAKC,IAAQC,KAAb,YAAqBD,IAAQE,aACzC,kBAAC,IAAD,CAASP,GAAE,qBAAgBD,EAAMP,MAAMgB,IAAMC,gBAAiBJ,IAAQK,QACpE,yBAAKC,IAAKZ,EAAMP,MAAMgB,GAAII,IAAKb,EAAMP,MAAMoB,MAC1Cb,EAAMP,MAAMqB,QCJNC,EAJK,SAAAf,GAClB,OAAO,yBAAKK,UAAWC,IAAQU,SAAUhB,EAAMgB,U,0BCuC3CC,EAAsBC,YAAU,CAAEC,KAAM,cAAlBD,EAXL,SAAAlB,GACrB,OACE,0BAAMoB,SAAUpB,EAAMqB,cACpB,yBAAKhB,UAAS,UAAKC,IAAQgB,QACzB,kBAACC,EAAA,EAAD,CAAOT,KAAK,aAAaU,UAAU,aACnC,6CAQOC,EAtCC,SAAAzB,GACd,IAAM0B,EAAgB1B,EAAM0B,cAAcC,KAAI,SAAAX,GAAO,OACnD,kBAACY,EAAD,CAAeZ,QAASA,EAAQA,QAASa,IAAKb,EAAQP,QAGlDD,EAAaR,EAAMQ,WAAWmB,KAAI,SAAApB,GAAI,OAC1C,kBAAC,EAAD,CAAad,MAAOc,EAAMsB,IAAKtB,EAAKE,QAQtC,OACE,yBAAKJ,UAAWC,IAAQwB,SACtB,yBAAKzB,UAAWC,IAAQyB,QAASvB,GACjC,6BACE,yBAAKH,UAAWC,IAAQ0B,UAAWN,GACnC,kBAACT,EAAD,CAAqBG,SAVV,SAACa,EAAaC,GAC7BlC,EAAMmC,cAAcF,GACpBC,EAASE,YAAM,qB,kCCLJC,sBACblC,aARsB,SAAAV,GACtB,MAAO,CACLiC,cAAejC,EAAM6C,aAAaN,SAClCxB,WAAYf,EAAM6C,aAAaC,eAKR,CAACJ,oBAC1BvC,IAFayC,CAGbZ","file":"static/js/5.ece6bf59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Ub32d\",\"dialog\":\"Dialogs_dialog__30PW5\",\"dialogItem\":\"Dialogs_dialogItem__3R4KW\",\"active\":\"Dialogs_active__DGwXM\",\"messages\":\"Dialogs_messages__ZXwf5\",\"message\":\"Dialogs_message__5bxXK\",\"user\":\"Dialogs_user__zEJkM\",\"input\":\"Dialogs_input__3lMPx\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\nimport classes from \"../../../../styles/Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\n\nconst UsersDialog = props => {\n  // console.log(props.state.id)\n  return (\n    <div className={`${classes.user} ${classes.dialogItem}`}>\n      <NavLink to={`/dialogs/id${props.state.id}`} activeClassName={classes.active}>\n        <img alt={props.state.id} src={props.state.src} />\n        {props.state.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default UsersDialog;\n","import React from \"react\";\nimport classes from \"../../../../styles/Dialogs.module.css\";\n\nlet MessagesItems = props => {\n  return <div className={classes.message}>{props.message}</div>;\n};\n\nexport default MessagesItems;\n","import React from \"react\";\nimport classes from \"../../../styles/Dialogs.module.css\";\nimport UsersDialog from \"./UsersDialog/UsersDialog\";\nimport MessagesItems from \"./Messages/Messages\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {reset} from 'redux-form';\n\nconst Dialogs = props => {\n  const messagesItems = props.messagesItems.map(message => (\n    <MessagesItems message={message.message} key={message.id} />\n  ));\n\n  const dialogItem = props.dialogItem.map(user => (\n    <UsersDialog state={user} key={user.id} />\n  ));\n\n  const onSubmit = (messageText, dispatch) => {\n    props.addNewMessage(messageText);\n    dispatch(reset(\"newMessage\"))\n  };\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialog}>{dialogItem}</div>\n      <div>\n        <div className={classes.messages}>{messagesItems}</div>\n        <NewMessageFormRedux onSubmit={onSubmit} />\n      </div>\n    </div>\n  );\n};\n\nconst NewMessageForm = props => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={`${classes.input}`}>\n        <Field name=\"newMessage\" component=\"textarea\" />\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst NewMessageFormRedux = reduxForm({ form: \"newMessage\" })(NewMessageForm);\n\nexport default Dialogs;\n","import Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { addNewMessage } from \"../../../redux/reduceDialogs\";\n\nconst mapStateToProps = state => {\n  return {\n    messagesItems: state.messagesPage.messages,\n    dialogItem: state.messagesPage.usersDialog,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {addNewMessage}),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}