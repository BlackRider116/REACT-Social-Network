{"version":3,"sources":["assets/image/avatarDefault.jpg","styles/Profile.module.scss","hoc/withAuthRedirect.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteFilled.js","../node_modules/@ant-design/icons/es/icons/DeleteFilled.js","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileUserInfo.jsx","../node_modules/react-bootstrap/esm/ButtonGroup.js","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DeleteFilled","ref","AntdIcon","Object","assign","icon","DeleteFilledSvg","displayName","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","profileInfoItem","style","cursor","placeholder","onChange","event","currentTarget","value","onBlur","setTimeout","autoFocus","onClick","updateUserStatus","status__text","undefined","isOwner","ReduxProfileInfoForm","reduxForm","form","profile","error","onSubmit","handleSubmit","type","saveProfileBtn","display","errorText","stylesProfile","inputStyle_Name","fieldValue","required","fullName","inputStyle","keys","contacts","map","contact","key","alignItems","ReduxProfileInfoFormAboutMe","aboutMe","ProfileUserInfo","marginLeft","ProfileAboutMe","width","alignItem","lookingForAJob","color","lookingForAJobDescription","ButtonGroup","forwardRef","bsPrefix","size","toggle","vertical","_props$as","as","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","defaultProps","role","ProfileInfo","profileUpdate","editModeName","setEditModeName","editModeAboutMe","setEditModeAboutMe","formData","saveProfile","fileUpload","createRef","profileInfoCard","profileInfo","src","photos","large","avatarDefault","alt","target","files","length","savePhoto","marginTop","isFollow","Button","variant","onFollowThunk","userId","startDialogThunk","paddingTop","current","click","DropdownButton","id","title","Dropdown","Item","margin","initialValues","MyPosts","posts","Card","classes","profilePost","profilePostItem","avaPhoto","postText","profilePostLikes","likes","likeDislikeMyPost","float","deleteMyPost","MyPostFormRedux","myPosts","Field","name","component","compose","profilePage","small","addNewPost","actionsProfile","deleteAllMyPosts","withRouter","post","match","params","localStorage","setItem","JSON","stringify","dispatch","newPost","reset","marginBottom","deleteLocalStorage","removeItem","Profile","global","Preloader","ProfileContainer","getProfileThunk","Number","getUserStatus","authUserId","userProfileId","prevState","url"],"mappings":"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","file":"static/js/4.1ae55cbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatarDefault.6c93098b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global\":\"Profile_global__2dASZ\",\"profileInfoCard\":\"Profile_profileInfoCard__24Dx_\",\"profileInfo\":\"Profile_profileInfo__77Yjz\",\"status__text\":\"Profile_status__text__CN9Hc\",\"profilePost\":\"Profile_profilePost__2pgMq\",\"profilePostItem\":\"Profile_profilePostItem__3fX0W\",\"profilePostLikes\":\"Profile_profilePostLikes__XhHl3\",\"deleteLocalStorage\":\"Profile_deleteLocalStorage__311b3\",\"myPosts\":\"Profile_myPosts__M2MUQ\",\"inputStyle_Name\":\"Profile_inputStyle_Name__2jh8i\",\"inputStyle\":\"Profile_inputStyle__3Q7s7\",\"aboutMe\":\"Profile_aboutMe__1D6E8\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// This icon file is generated automatically.\n// tslint:disable\nvar DeleteFilled = { \"name\": \"delete\", \"theme\": \"filled\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 256H736v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zm-200 0H360v-72h304v72z\" } }] } };\nexport default DeleteFilled;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteFilledSvg from \"@ant-design/icons-svg/es/asn/DeleteFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteFilled = function DeleteFilled(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DeleteFilledSvg\n  }));\n};\n\nDeleteFilled.displayName = 'DeleteFilled';\nexport default React.forwardRef(DeleteFilled);","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport styles from \"../../../styles/Profile.module.scss\";\n\ntype PropsType = {\n  status: string\n  isOwner: number | undefined\n  updateUserStatus: (status: string) => void\n}\n\nconst ProfileStatus: React.FC<PropsType> = props => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activatedEditMode = () => {\n    if (props.isOwner === undefined) {\n      setEditMode(true);\n    }\n  };\n  const deactivatedEditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setStatus(event.currentTarget.value);\n  };\n\n  return (\n    <div className={styles.profileInfoItem}>\n      {!editMode ? (\n        <div className={styles.status__text}\n          onClick={activatedEditMode}\n        >\n          {props.status}\n        </div>\n      ) : (\n          <div style={{ cursor: \"pointer\" }}>\n            <input  \n              placeholder=\"Введите Ваш статус\"\n              onChange={onStatusChange}\n              onBlur={() => {\n                setTimeout(() => {\n                  setEditMode(false);\n                }, 500);\n              }}\n              autoFocus={true}\n              value={status}\n            /> \n            <button onClick={deactivatedEditMode}>OK</button>\n          </div>\n        )} \n    </div>\n  )\n};\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport styles from \"../../../common/FormControl/FormControl.module.css\";\nimport { reduxForm } from \"redux-form\";\nimport { fieldValue } from \"../../../common/FormControl/FormControl\";\nimport { required } from \"../../../utilities/validation/validation\";\nimport stylesProfile from \"../../../styles/Profile.module.scss\";\n// import { ProfileType } from \"../../../redux/reducers/reduceProfile\";\n\nconst ProfileInfoForm = ({ profile, error, ...props }) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button\n        type=\"submit\"\n        ref={props.saveProfileBtn}\n        style={{ display: \"none\" }}\n      >\n        Сохранить\n      </button>\n      <div>{error && <div className={styles.errorText}>{error}</div>}</div>\n\n      <div>\n        <div className={stylesProfile.inputStyle_Name}>\n          <b>Полное имя: </b>\n          <div>\n            {fieldValue(\n              required,\n              \"fullName\",\n              \"input\",\n              null,\n              null,\n              profile.fullName\n            )}\n          </div>\n        </div>\n        <div className={stylesProfile.inputStyle}>\n          <b>Контакты: </b>\n          <div>\n            {Object.keys(profile.contacts).map(contact => {\n              return (\n                <span\n                  key={contact}\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <b>{contact}: </b>\n                  {fieldValue(\n                    [],\n                    \"contacts.\" + contact,\n                    \"input\",\n                    contact,\n                    null\n                  )}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxProfileInfoForm = reduxForm({ form: \"profileUserInfo\" })(ProfileInfoForm)\n\nexport const ProfileInfoFormAboutMe = ({ profile, error, ...props }) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button\n        type=\"submit\"\n        ref={props.saveProfileBtn}\n        style={{ display: \"none\" }}\n      >\n        Сохранить\n      </button>\n      <span>{error && <span className={styles.errorText}>{error}</span>}</span>\n      <div className={stylesProfile.aboutMe}>\n        <div>\n          <b>Обо мне: </b>\n          {fieldValue(required, \"aboutMe\", null)}\n        </div>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <b>В поиске работы: </b>{\" \"}\n          {fieldValue([], \"lookingForAJob\", \"input\", null, \"checkbox\")}\n        </div>\n\n        <div>\n          <b>Мой скилл: </b>\n          {fieldValue(required, \"lookingForAJobDescription\", null, null, null)}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const ReduxProfileInfoFormAboutMe = reduxForm({\n  form: \"profileUserInfoAboutMe\"\n})(ProfileInfoFormAboutMe);\n\n\nexport const ProfileUserInfo = ({ profile }) => {\n  return (\n    <div>\n      <b>Контакты: </b>\n      {Object.keys(profile.contacts).map(contact => {\n        return (\n          <div key={contact} style={{ marginLeft: \"15px\" }}>\n            {profile.contacts[contact] !== null &&\n              profile.contacts[contact] !== \"\" && (\n                <div>\n                  <b>{contact}: </b>\n                  {profile.contacts[contact]}\n                </div>\n              )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const ProfileAboutMe = ({ profile }) => {\n  return (\n    <div>\n      <div>\n        <b>Обо мне: </b>\n        <div style={{ marginLeft: \"10px\", width: \"60%\" }}>\n          {profile.aboutMe}\n        </div>\n      </div>\n\n      <div style={{ display: \"flex\", alignItem: \"center\" }}>\n        <b>В поиске работы: </b>\n        <h5 style={{ marginLeft: \"10px\" }}>\n          {profile.lookingForAJob ? (\n            <span style={{ color: \"green\" }}>Yes</span>\n          ) : (\n              <span style={{ color: \"red\" }}>No</span>\n            )}\n        </h5>\n      </div>\n\n      <div>\n        <b>Мои скиллы: </b>\n        <div style={{ marginLeft: \"10px\", width: \"60%\" }}>\n          {profile.lookingForAJobDescription}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport avatarDefault from \"../../../assets/image/avatarDefault.jpg\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport styles from \"../../../styles/Profile.module.scss\";\nimport {\n  ReduxProfileInfoForm,\n  ProfileUserInfo,\n  ProfileAboutMe,\n  ReduxProfileInfoFormAboutMe\n} from \"./ProfileUserInfo\";\nimport { Button, Dropdown, DropdownButton, ButtonGroup } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { ProfileType } from \"../../../redux/reducers/reduceProfile\";\n\ntype PropsType = {\n  isOwner: number | undefined\n  profileUpdate: boolean | null\n  profile: ProfileType\n  isFollow: boolean\n  status: string\n\n  onFollowThunk: (userId: number, isFollow: boolean) => void\n  savePhoto: (file: File) => void\n  saveProfile: (formData: any) => void\n  updateUserStatus: (status: string) => void\n  startDialogThunk: (userId: number) => void\n}\n\n// type FormDataType = {\n\n// }\n\nconst ProfileInfo: React.FC<PropsType> = ({ profileUpdate, ...props }) => {\n\n  const photoSelected = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files !== null && event.target.files.length) {\n      props.savePhoto(event.target.files[0]);\n    }\n  };\n\n  const [editModeName, setEditModeName] = useState(false);\n  const [editModeAboutMe, setEditModeAboutMe] = useState(false);\n\n  const onSubmit = (formData: any) => {\n    if (formData !== props.profile) {\n      props.saveProfile(formData);\n    } else if (profileUpdate !== false) {\n      setEditModeName(false);\n      setEditModeAboutMe(false);\n    }\n  };\n\n  useEffect(() => {\n    if (profileUpdate === true) {\n      setEditModeName(false);\n      setEditModeAboutMe(false);\n    }\n  }, [profileUpdate]);\n\n  const fileUpload: React.RefObject<HTMLInputElement> = React.createRef();\n  const saveProfileBtn: React.RefObject<HTMLInputElement> = React.createRef();\n\n  return (\n    <>\n      <div className={styles.profileInfoCard}>\n        <div className={styles.profileInfo}>\n          <img\n            src={props.profile !== null && props.profile.photos.large !== null\n              ? props.profile.photos.large\n              : avatarDefault\n            }\n            alt=\"AvaPhoto\"\n          />\n          <input\n            ref={fileUpload}\n            type={\"file\"}\n            onChange={photoSelected}\n            style={{ display: \"none\" }}\n          />\n          {!props.isOwner ? (\n            <div style={{ paddingTop: \"3px\" }}>\n              <Button\n                style={{ width: \"250px\" }}\n                onClick={() => { if (fileUpload.current) fileUpload.current.click() }}\n                variant=\"secondary\"\n              >\n                Изменить фото\n              </Button>\n              {!props.isOwner && !editModeName && !editModeAboutMe ? (\n                  <DropdownButton key={'DropdownButton'} as={ButtonGroup} id=\"dropdown-variant-primary\" title=\"Редактировать профиль\" style={{ marginTop: \"3px\", width: \"100%\" }}>\n                    <Dropdown.Item style={{ width: \"250px\" }} onClick={() => setEditModeName(true)}>Имя и контакты</Dropdown.Item>\n                    <Dropdown.Item style={{ width: \"250px\" }} onClick={() => setEditModeAboutMe(true)}>Обо мне</Dropdown.Item>\n                  </DropdownButton>\n              ) : (\n                  <Button\n                    style={{ marginTop: \"3px\", width: \"250px\" }}\n                    variant=\"success\"\n                    onClick={() => { if (saveProfileBtn.current) saveProfileBtn.current.click() }}\n                  >\n                    Сохранить\n                </Button>\n                )}\n            </div>\n          ) : (\n              <div style={{ marginTop: \"5px\" }}>\n                <div>\n                  {!props.isFollow ? (\n                    <Button\n                      style={{ width: \"250px\" }}\n                      variant=\"success\"\n                      onClick={() =>\n                        props.onFollowThunk(props.profile.userId, props.isFollow)\n                      }\n                    >\n                      Подписаться\n                  </Button>\n                  ) : (\n                      <Button\n                        style={{ width: \"250px\" }}\n                        variant=\"danger\"\n                        onClick={() =>\n                          props.onFollowThunk(props.profile.userId, props.isFollow)\n                        }\n                      >\n                        Отписаться\n                  </Button>\n                    )}\n                </div>\n                <div style={{ marginTop: \"3px\" }}>\n                  <NavLink to={`/dialogs/${props.profile.userId}`}>\n                    <Button\n                      style={{ width: \"250px\" }}\n                      onClick={() => props.startDialogThunk(props.profile.userId)}\n                    >\n                      Написать сообщение\n                  </Button>\n                  </NavLink>\n                </div>\n              </div>\n            )}\n        </div>\n        <div style={{ margin: \"10px\" }}>\n          <h3>{props.profile.fullName}</h3>\n          <ProfileStatus\n            isOwner={props.isOwner}\n            status={props.status}\n            updateUserStatus={props.updateUserStatus}\n          />\n          <div style={{ marginLeft: \"10px\" }}>\n            {!editModeName ? (\n              <ProfileUserInfo profile={props.profile} />\n            ) : (\n                //@ts-ignore\n                <ReduxProfileInfoForm\n                  {...props}\n                  onSubmit={onSubmit}\n                  initialValues={props.profile}\n                // saveProfileBtn={saveProfileBtn}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n      <div style={{ marginLeft: \"10px\" }}>\n        {!editModeAboutMe ? (\n          <ProfileAboutMe profile={props.profile} />\n        ) : (\n            //@ts-ignore\n            <ReduxProfileInfoFormAboutMe\n              {...props}\n              onSubmit={onSubmit}\n              initialValues={props.profile}\n            // saveProfileBtn={saveProfileBtn}\n            />\n          )}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport classes from \"../../../styles/Profile.module.scss\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { DeleteFilled } from \"@ant-design/icons\";\nimport avatarDefault from '../../../assets/image/avatarDefault.jpg'\nimport { PostType } from \"../../../redux/reducers/reduceProfile\";\n\ntype PropsType = {\n  avaPhoto: string | null\n  posts: PostType\n  likeDislikeMyPost: (postId: number, boolean: boolean) => void\n  deleteMyPost: (postId: number) => void\n}\n\nexport const MyPosts: React.FC<PropsType> = ({posts, ...props}) => {\n  return (\n    <Card className={classes.profilePost}>\n      <div className={classes.profilePostItem}>\n        <img alt=\"Post\" src={props.avaPhoto !== null ? props.avaPhoto : avatarDefault } />\n        <span>{posts.postText}</span>\n      </div>\n      <div className={classes.profilePostLikes}>\n        <span>{`💗 ${posts.likes}  `}</span>\n        <Button\n          variant=\"success\"\n          onClick={() => props.likeDislikeMyPost(posts.id, true)}\n        >\n          <span>{\"👍\"}</span>\n        </Button>\n        <Button\n          variant=\"danger\"\n          onClick={() => props.likeDislikeMyPost(posts.id, false)}\n        >\n          <span>{\"👎\"}</span>\n        </Button>\n        <Button\n          variant=\"dark\"\n          style={{ float: \"right\" }}\n          onClick={() => props.deleteMyPost(posts.id)}\n        >\n          <DeleteFilled style={{ color: \"red\" }} />\n        </Button>\n      </div>\n    </Card>\n  );\n};","import React, { ComponentType, Dispatch } from \"react\";\nimport classes from \"../../../styles/Profile.module.scss\";\nimport { MyPosts } from \"./MyPosts\";\nimport { Field, reduxForm, reset, InjectedFormProps } from \"redux-form\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport {\n  actionsProfile,\n  likeDislikeMyPost,\n  PostType\n} from \"../../../redux/reducers/reduceProfile\";\nimport { compose } from \"redux\";\nimport { GlobalStateType } from \"../../../redux/reduxStore\";\n\n\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & RouteComponentProps<{ userId: string }>\n\nconst MyPostsContainer: React.FC<PropsType> = props => {\n  const myPosts = props.posts.map(post => (\n    <MyPosts\n      avaPhoto={props.avaPhoto}\n      posts={post}\n      key={post.id}\n      likeDislikeMyPost={props.likeDislikeMyPost}\n      deleteMyPost={props.deleteMyPost}\n    />\n  ));\n\n  const userId = props.match.params.userId\n\n  const onSubmit = (postText: BodyValuesType, dispatch: Dispatch<{}>) => {\n    props.addNewPost(postText.newPost, props.avaPhoto);\n    dispatch(reset(\"myNewPost\"));\n  };\n\n  localStorage.setItem(\"MyPosts\", JSON.stringify(props.posts));\n\n  return (\n    <>\n      {!userId && (\n        <div>\n          <MyPostFormRedux onSubmit={onSubmit} />\n          <div style={{ marginBottom: \"10px\" }}>{myPosts}</div>\n          <div className={classes.deleteLocalStorage}>\n            {props.posts.length !== 0 &&\n              <Button\n                variant=\"danger\"\n                onClick={() => {\n                  localStorage.removeItem(\"MyPosts\");\n                  props.deleteAllMyPosts();\n                }}\n              >\n                Очиcтить localStorage и удалить посты\n            </Button>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\n\ntype BodyValuesType = { newPost: string }\n\nconst MyPostForm: React.FC<InjectedFormProps<BodyValuesType>> = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.myPosts}>\n        <Field name=\"newPost\" component=\"textarea\" />\n        <Button type=\"submit\">Добавить</Button>\n      </div>\n    </form>\n  );\n};\n\nconst MyPostFormRedux = reduxForm<BodyValuesType>({ form: \"myNewPost\" })(MyPostForm);\n\ntype MapStateToPropsType = {\n  posts: Array<PostType>\n  avaPhoto: string | null\n}\n\nconst mapStateToProps = (state: GlobalStateType): MapStateToPropsType => {\n  return {\n    posts: state.profilePage.posts,\n    avaPhoto: state.profilePage.profile !== null ? state.profilePage.profile.photos.small : null\n  };\n};\n\ntype MapDispatchToPropsType = {\n  addNewPost: (postText: string, photo: string | null) => void\n  likeDislikeMyPost: (postId: number, boolean: boolean) => void\n  deleteMyPost: (postId: number) => void\n  deleteAllMyPosts: () => void\n}\nexport default compose<ComponentType<{}>>(\n  connect<MapStateToPropsType, MapDispatchToPropsType, {}, GlobalStateType>(mapStateToProps, {\n    addNewPost: actionsProfile.addNewPost,\n    likeDislikeMyPost,\n    deleteMyPost: actionsProfile.deleteMyPost,\n    deleteAllMyPosts: actionsProfile.deleteAllMyPosts\n  }),\n  withRouter\n)(MyPostsContainer);\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport  MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport { Card } from \"react-bootstrap\";\nimport styles from '../../styles/Profile.module.scss'\nimport { ProfileType } from \"../../redux/reducers/reduceProfile\";\n\ntype PropsType = {\n  profile: ProfileType | null\n  status: string\n  profileUpdate: boolean | null\n  isFollow: boolean\n  isOwner: number \n\n  updateUserStatus: (status: string) => void\n  savePhoto: (file: File) => void\n  saveProfile: (formData: any) => void\n  startDialogThunk: (userId: number) => void\n  onFollowThunk: (userId: number, isFollow: boolean) => void\n}\n\nconst Profile: React.FC<PropsType> = (props) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n  return (\n    <Card className={styles.global} >\n      <ProfileInfo\n        profile={props.profile}\n        profileUpdate={props.profileUpdate}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n        status={props.status}\n        updateUserStatus={props.updateUserStatus}\n        startDialogThunk={props.startDialogThunk}\n        isFollow={props.isFollow}\n        onFollowThunk={props.onFollowThunk}\n      />\n      <MyPostsContainer />\n    </Card>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n  getProfileThunk,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  onFollowThunk,\r\n  ProfileType,\r\n} from \"../../redux/reducers/reduceProfile\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { startDialogThunk } from \"../../redux/reducers/reduceDialogs\";\r\nimport { GlobalStateType } from \"../../redux/reduxStore\";\r\n\r\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & RouteComponentProps<{userId: string}>\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  userProfileId() {\r\n    const userId = this.props.match.params.userId\r\n\r\n    if (this.props.isAuth) {\r\n      if (!userId) {\r\n        if (this.props.authUserId !== null) {\r\n          this.props.getProfileThunk(this.props.authUserId)\r\n          this.props.getUserStatus(this.props.authUserId)\r\n        }\r\n      } else {\r\n        this.props.getProfileThunk(Number(userId))\r\n        this.props.getUserStatus(Number(userId))\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.userProfileId();\r\n  }\r\n\r\n  componentDidUpdate(prevState: any) {\r\n    if (this.props.match.url !== prevState.match.url) {\r\n      this.userProfileId();\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        isOwner={Number(this.props.match.params.userId)}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        profileUpdate={this.props.profileUpdate}\r\n        updateUserStatus={this.props.updateUserStatus}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n        startDialogThunk={this.props.startDialogThunk}\r\n        isFollow={this.props.isFollow}\r\n        onFollowThunk={this.props.onFollowThunk}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\ntype MapStateToPropsType = {\r\n  profile: ProfileType | null\r\n  status: string\r\n  profileUpdate: boolean | null\r\n  isFollow: boolean\r\n  authUserId: number | null\r\n  isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: GlobalStateType): MapStateToPropsType => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    profileUpdate: state.profilePage.profileUpdate,\r\n    isFollow: state.profilePage.isFollow,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\ntype MapDispatchToPropsType = {\r\n  getProfileThunk: (userId: number) => void\r\n  getUserStatus: (userId:  number) => void\r\n  updateUserStatus: (status: string) => void\r\n  savePhoto: (file: File) => void\r\n  saveProfile: (formData: any) => void\r\n  startDialogThunk: (userId: number) => void\r\n  onFollowThunk: (userId: number, isFollow: boolean) => void\r\n}\r\nexport default compose(\r\n  connect<MapStateToPropsType, MapDispatchToPropsType, {}, GlobalStateType>(mapStateToProps, {\r\n    getProfileThunk,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    startDialogThunk,\r\n    onFollowThunk\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}