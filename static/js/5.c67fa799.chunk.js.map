{"version":3,"sources":["assets/image/avatarDefault.jpg","hoc/withAuthRedirect.js","styles/Dialogs.module.scss","components/Navbar/Dialogs/UsersDialog/UsersDialog.jsx","components/Navbar/Dialogs/Messages/Messages.jsx","components/Navbar/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","UsersDialog","user","userInfo","className","classes","dialogItem","id","alt","src","photos","small","avatarDefault","activeClassName","active","onClick","userMessages","userName","NewMessageFormRedux","reduxForm","form","submit","message","dispatch","a","sendMessageThunk","userId","newMessage","reset","onSubmit","handleSubmit","styles","input","Field","name","component","Button","variant","type","Messages","myId","messageItem","items","map","item","key","Card","senderId","message_right","message_left","isSelect","message_card_select","message_card","selectMessageThunk","body","replace","DeleteFilled","message_delete","deleteMessageThunk","format","message_data_right","message_data_left","addedAt","viewed","message_viewed","DialogsContainer","match","params","getAllDialogsThunk","getUserMessagesThunk","dialogs","usersInfo","compose","messagesPage","withRouter"],"mappings":"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","file":"static/js/5.c67fa799.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatarDefault.6c93098b.jpg\";","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForRedirect = state => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1HFLl\",\"dialogItem\":\"Dialogs_dialogItem__26fFk\",\"active\":\"Dialogs_active__3_eL3\",\"message\":\"Dialogs_message__2tLdL\",\"message_card\":\"Dialogs_message_card__3_tVC\",\"message_card_select\":\"Dialogs_message_card_select__3US-J\",\"message_delete\":\"Dialogs_message_delete__347JM\",\"message_left\":\"Dialogs_message_left__3qHEf\",\"message_right\":\"Dialogs_message_right__2SbB4\",\"message_data_right\":\"Dialogs_message_data_right__OoqIP\",\"message_data_left\":\"Dialogs_message_data_left__1MamM\",\"message_viewed\":\"Dialogs_message_viewed__275qw\",\"user\":\"Dialogs_user__3jqa3\",\"input\":\"Dialogs_input__Ed3Pc\"};","import React from \"react\";\nimport classes from \"../../../../styles/Dialogs.module.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport avatarDefault from \"../../../../assets/image/avatarDefault.jpg\";\n\nconst UsersDialog = props => {\n  const user = props.userInfo;\n\n  return (\n    <div className={`${classes.user} ${classes.dialogItem}`}>\n      <NavLink to={`/profile/${user.id}`}>\n        <img\n          alt={user.id}\n          src={user.photos.small ? user.photos.small : avatarDefault}\n        />\n      </NavLink>\n      <NavLink to={`/dialogs/${user.id}`} activeClassName={classes.active}>\n        <div onClick={() => props.userMessages(user.id)}>{user.userName}</div>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default UsersDialog;\n","import React from \"react\";\nimport styles from \"../../../../styles/Dialogs.module.scss\";\nimport { Card } from \"react-bootstrap\";\nimport Moment from \"react-moment\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Button } from \"react-bootstrap\";\nimport { DeleteFilled } from \"@ant-design/icons\";\n\nconst Messages = ({ myId, ...props }) => {\n  let messageItem = props.userMessages.items || [];\n\n  // console.log(messageItem);\n  return (\n    <>\n      {messageItem.map(item => (\n        <div key={item.id} className={`${styles.message}`}>\n          <Card\n            className={`${\n              item.senderId === myId\n                ? styles.message_right\n                : styles.message_left\n            } ${\n              item.isSelect\n                ? `${styles.message_card_select} ${styles.message_card}`\n                : styles.message_card\n            }`}\n            onClick={() => props.selectMessageThunk(item.id)}\n          >\n            {item.body.replace(\"<br />\", \"\")}\n            {item.isSelect && item.senderId === myId && (\n              <span>\n                <DeleteFilled className={styles.message_delete} onClick={()=>props.deleteMessageThunk(item.id)} />\n              </span>\n            )}\n\n            <Moment\n              format=\"DD-MM-YYYY HH:mm\"\n              className={\n                item.senderId === myId\n                  ? styles.message_data_right\n                  : styles.message_data_left\n              }\n            >\n              {item.addedAt}\n            </Moment>\n            {item.senderId === myId && !item.viewed && (\n              <div className={styles.message_viewed} >не прочитано</div>\n            )}\n          </Card>\n        </div>\n      ))}\n      <NewMessageFormRedux\n        sendMessageThunk={props.sendMessageThunk}\n        userId={props.userId}\n      />\n    </>\n  );\n};\n\nconst NewMessageForm = props => {\n  const submit = async (message, dispatch) => {\n    await props.sendMessageThunk(props.userId, message.newMessage);\n    dispatch(props.reset(\"newMessage\"));\n  };\n\n  return (\n    <form onSubmit={props.handleSubmit(submit)}>\n      <div className={`${styles.input}`}>\n        <Field name=\"newMessage\" component=\"textarea\" />\n        <Button variant=\"secondary\" type=\"submit\">\n          Отправить\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nconst NewMessageFormRedux = reduxForm({ form: \"newMessage\" })(NewMessageForm);\n\nexport default Messages;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport styles from \"../../../styles/Dialogs.module.scss\";\nimport { getAllDialogsThunk, getUserMessagesThunk, UserMessagesType, sendMessageThunk, deleteMessageThunk, selectMessageThunk } from \"../../../redux/reduceDialogs\";\nimport { UserInfoType } from '../../../redux/reduceDialogs'\nimport { GlobalStateType } from \"../../../redux/reduxStore\";\nimport UsersDialog from \"./UsersDialog/UsersDialog\";\nimport Messages from \"./Messages/Messages\";\n\n\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\nclass DialogsContainer extends React.Component<PropsType> {\n  //@ts-ignore\n  userId = this.props.match.params.userId\n  componentDidMount() {\n    this.props.getAllDialogsThunk();\n    if (this.userId) {\n      this.props.getUserMessagesThunk(this.userId)\n    }\n  }\n\n  componentDidUpdate() {\n    // console.log(this.props.userMessages)\n  }\n\n  render() {\n    return (\n      <div className={styles.dialogs}>\n        <div>\n          {this.props.usersInfo.map((user: UserInfoType) => (\n            <UsersDialog key={user.id} userInfo={user} userMessages={this.props.getUserMessagesThunk} />\n          ))}\n        </div>\n\n        <div>\n          <Messages\n            userMessages={this.props.userMessages}\n            myId={this.props.myId}\n            userId={this.userId}\n            sendMessageThunk={this.props.sendMessageThunk}\n            selectMessageThunk={this.props.selectMessageThunk}\n            deleteMessageThunk={this.props.deleteMessageThunk} />\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\ntype MapStateToPropsType = {\n  usersInfo: Array<UserInfoType>\n  userMessages: UserMessagesType\n  myId: number | null\n}\nconst mapStateToProps = (state: GlobalStateType): MapStateToPropsType => {\n  return {\n    usersInfo: state.messagesPage.usersInfo,\n    userMessages: state.messagesPage.userMessages,\n    myId: state.auth.userId\n  };\n};\n\ntype MapDispatchToPropsType = {\n  getAllDialogsThunk: () => void\n  getUserMessagesThunk: (userId: number) => void\n  sendMessageThunk: (userId: number, message: string) => void\n  deleteMessageThunk: (messageID: string) => void\n  selectMessageThunk: (messageId: string) => void\n}\nexport default compose(\n  connect<MapStateToPropsType, MapDispatchToPropsType, {}, GlobalStateType>(mapStateToProps,\n    {\n      getAllDialogsThunk,\n      getUserMessagesThunk,\n      sendMessageThunk,\n      deleteMessageThunk,\n      selectMessageThunk\n    }),\n  withRouter,\n  withAuthRedirect\n)(DialogsContainer);\n"],"sourceRoot":""}